//Remember that rollNo variable must be an integer

//widget code

@Composable
fun StudentInfoCard(admissionType: String , studentDBuid: String, classid :String,classname :String, sectionid: String,sectionName :String, name: String, fathername: String, schoolAdmissionNo: String, contactNo: String, gender: String, imageURL:String, navController: NavController, onClick: () -> Unit,isAdminSection: Boolean=true) {
    var counter=0
    val painter= rememberAsyncImagePainter(model = imageURL)
    val spacing = MaterialTheme.spacing
    val context = LocalContext.current
    val rollNo = 1

    androidx.compose.material3.Card(
        modifier = Modifier
            .fillMaxWidth()
            .wrapContentHeight()
            .padding(start = spacing.medium, end = spacing.medium, top = spacing.medium)
            .clickable {


            }
    )
    {

        Box {
            Row() {
                Column(modifier = Modifier
                    .width(10.dp)
                    .background(
                        if (gender.lowercase() == "male") Color(0xFFA8D9C5) else Color(0xFF283B5B)
                    )
                    .height(150.dp))
                {

                }
                Row(
                    modifier = Modifier
                        .fillMaxWidth()
                        .wrapContentHeight()
                        .background(
                            if (gender.lowercase() == "male") Color(0xFFD3EAE2) else Color(0xFFE4E2F8)
                        )
                        .padding(5.dp)
                        .padding(5.dp)
                )
                {
                    Column(horizontalAlignment = CenterHorizontally) {
                        Image(
                            painter = painter,
                            contentDescription = "",
                            contentScale = ContentScale.Crop,
                            modifier = Modifier
                                .size(110.dp)
                                .clip(CircleShape)
                                .clickable {
                                    //launcher.launch("image/jpeg")
                                }
                        )
                        GenerateStudentType(ews =true, rte = true, pwd = false, sfc =false, sg = false)
                    }
                    Column(                    horizontalAlignment = Alignment.CenterHorizontally
                    ) {
                        Row {
                            Column(
                                modifier = Modifier.weight(.6f),
                                horizontalAlignment = CenterHorizontally
                            ) {
                                Text(
                                    text = "( ${classname} - ${sectionName} )",
                                    fontSize = 13.sp,
                                    //color = Color.Gray,
                                    //modifier = Modifier.padding(top = 5.dp),
                                    fontWeight = FontWeight.Bold

                                )
                                Text(
                                    text = name,
                                    fontSize = 13.sp,
                                    //color = Color.Gray,
                                    //modifier = Modifier.padding(top = 5.dp),
                                    fontWeight = FontWeight.Bold

                                )
                                if (fathername.isNotEmpty()) {
                                    Text(
                                        text = "$fathername ( F )",
                                        fontSize = 12.sp,
                                        color = Color.Black,
                                        //modifier = Modifier.padding(12.dp),
                                        fontWeight = FontWeight.Bold
                                    )
                                }
                                Text(
                                    text = "Adm. No. - $schoolAdmissionNo",
                                    fontSize = 12.sp,
                                    color = if (admissionType.lowercase() == "temp") Color.Red else Color.Black,
                                    //modifier = Modifier.padding(12.dp),
                                    fontWeight = FontWeight.Bold
                                )


                                    Text(
                                        // text = "Admission Date-  ${context.toDateString(studentDTO.admissiondate)}",
                                        text = "Contact No- $contactNo",
                                        fontSize = 12.sp,
                                        //color = Color.Gray,
                                        //modifier = Modifier.padding(12.dp),
                                        fontWeight = FontWeight.Bold
                                    )
                            }

                        }

                        Column(
                            horizontalAlignment = Alignment.CenterHorizontally
                        ) {

                            if (isAdminSection) {
                                Row() {
                                    Box(
                                        modifier = Modifier
                                            .clip(RoundedCornerShape(spacing.small))
                                            .wrapContentWidth()
                                            //.padding(start =padding.dp )
                                            .background(MaterialTheme.colorScheme.primary)
                                            .clickable() {
                                                navController.navigate("studentindinfo/${studentDBuid}")

                                            }
                                    ) {
                                        Text(
                                            text = "View Profile",
                                            style = MaterialTheme.typography.bodySmall,
                                            color = MaterialTheme.colorScheme.onSecondary,
                                            modifier = Modifier.padding(
                                                top = spacing.extraSmall,
                                                bottom = spacing.extraSmall,
                                                start = spacing.small,
                                                end = spacing.small
                                            )
                                        )
                                    }
                                    Spacer(modifier = Modifier.width(10.dp))
                                    Box(
                                        modifier = Modifier
                                            .clip(RoundedCornerShape(spacing.small))
                                            .wrapContentWidth()
                                            //.padding(start =padding.dp )
                                            .background(MaterialTheme.colorScheme.primary)
                                            .clickable() {
                                                if (admissionType.lowercase() == "temp") {
                                                    context.toast("This is registration, first confirm this admission, then you can pay fee")
                                                } else {
                                                    val oldVal = '/'
                                                    val newVal = '*'
                                                    val formattedAdmNo =
                                                        schoolAdmissionNo.replace(oldVal, newVal)
                                                    navController.navigate("feeinfo/${studentDBuid}/${classid}/${classname}/${sectionid}/${sectionName}/${name}/${formattedAdmNo}/${contactNo}")

                                                }
                                            }
                                    ) {
                                        Text(
                                            text = "Pay Details",
                                            style = MaterialTheme.typography.bodySmall,
                                            color = MaterialTheme.colorScheme.onSecondary,
                                            modifier = Modifier.padding(
                                                top = spacing.extraSmall,
                                                bottom = spacing.extraSmall,
                                                start = spacing.small,
                                                end = spacing.small
                                            )
                                        )
                                    }
                                }
                            } else {
                                Row() {
                                    Box(
                                        modifier = Modifier
                                            .clip(RoundedCornerShape(spacing.small))
                                            .wrapContentWidth()
                                            //.padding(start =padding.dp )
                                            .background(
                                                if (gender.lowercase() == "male") Color(0xFF2F3B81) else Color(
                                                    0xFFE91E63
                                                )
                                            )
                                    ) {
                                        Text(
                                            text = "I'm your ${gender.lowercase()} Mate",
                                            textAlign = TextAlign.Center,
                                            style = MaterialTheme.typography.bodySmall,
                                            color = MaterialTheme.colorScheme.onSecondary,
                                            modifier = Modifier.padding(
                                                top = spacing.extraSmall,
                                                bottom = spacing.extraSmall,
                                                start = spacing.small,
                                                end = spacing.small
                                            )
                                        )
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if(rollNo > 0) {
                Box(
                    contentAlignment = Center,
                    modifier = Modifier.align(TopEnd)
                ) {
                    Image(
                        painter = painterResource(
                            id = if (gender.lowercase() == "male") R.drawable.quarter_circle_male
                            else R.drawable.quarter_circle_female
                        ),
                        "",
                        modifier = Modifier.size(50.dp)
                    )
                    Text(
                        text = "500",
                        style = MaterialTheme.typography.titleSmall,
                        fontWeight = FontWeight.Black,
                        color = if(gender.lowercase() == "male") Color.Black
                        else Color.White,
                        textAlign = TextAlign.Center
                    )
                }
            }
        }

    }
}
